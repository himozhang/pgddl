\pset null _null_
\pset format unaligned
SET client_min_messages = warning;
SET ROLE postgres;
CREATE TEXT SEARCH CONFIGURATION english1 ( PARSER = pg_catalog."default" );
COMMENT ON TEXT SEARCH CONFIGURATION english1 IS 'configuration for english language (1)';
ALTER TEXT SEARCH CONFIGURATION english1 OWNER TO postgres;
select ddlx_create('english1'::regconfig);
ddlx_create
CREATE TEXT SEARCH CONFIGURATION english1 ( PARSER = pg_catalog."default" );
COMMENT ON TEXT SEARCH CONFIGURATION english1 IS 'configuration for english language (1)';


(1 row)
select ddlx_drop('english1'::regconfig);
ddlx_drop
DROP TEXT SEARCH CONFIGURATION english1;

(1 row)
CREATE TEXT SEARCH DICTIONARY english1_stem
  ( TEMPLATE = pg_catalog.snowball, language = 'english', stopwords = 'english' );
COMMENT ON TEXT SEARCH DICTIONARY english1_stem IS 'snowball stemmer for english language (1)';
ALTER TEXT SEARCH DICTIONARY english1_stem OWNER TO postgres;
select ddlx_create('english1_stem'::regdictionary);
ddlx_create
CREATE TEXT SEARCH DICTIONARY english1_stem
  ( TEMPLATE = pg_catalog.snowball, language = 'english', stopwords = 'english' );
COMMENT ON TEXT SEARCH DICTIONARY english1_stem IS 'snowball stemmer for english language (1)';


(1 row)
select ddlx_drop('english1_stem'::regdictionary);
ddlx_drop
DROP TEXT SEARCH DICTIONARY english1_stem;

(1 row)
CREATE TEXT SEARCH CONFIGURATION simple1 ( PARSER = pg_catalog."default" );
COMMENT ON TEXT SEARCH CONFIGURATION simple1 IS 'simple configuration (1)';
ALTER TEXT SEARCH CONFIGURATION simple1 OWNER TO postgres;
select ddlx_create('simple1'::regconfig);
ddlx_create
CREATE TEXT SEARCH CONFIGURATION simple1 ( PARSER = pg_catalog."default" );
COMMENT ON TEXT SEARCH CONFIGURATION simple1 IS 'simple configuration (1)';


(1 row)
CREATE TEXT SEARCH DICTIONARY simple1
  ( TEMPLATE = pg_catalog.simple );
COMMENT ON TEXT SEARCH DICTIONARY simple1 
     IS 'simple dictionary: just lower case and check for stopword (1)';
ALTER TEXT SEARCH DICTIONARY simple1 OWNER TO postgres;
select ddlx_create('simple1'::regdictionary);
ddlx_create
CREATE TEXT SEARCH DICTIONARY simple1
  ( TEMPLATE = pg_catalog.simple );
COMMENT ON TEXT SEARCH DICTIONARY simple1 IS 'simple dictionary: just lower case and check for stopword (1)';


(1 row)
select ddlx_create((select oid from pg_ts_parser where prsname='default'));
ddlx_create
CREATE TEXT SEARCH PARSER pg_catalog."default" (
  START = prsd_start,
  GETTOKEN = prsd_nexttoken,
  END = prsd_end,
  LEXTYPES = prsd_lextype,
  HEADLINE = prsd_headline
);
COMMENT ON TEXT SEARCH PARSER pg_catalog."default" IS 'default word parser';


(1 row)
select ddlx_create((select oid from pg_ts_template where tmplname='simple'));
ddlx_create
CREATE TEXT SEARCH TEMPLATE pg_catalog.simple (
  INIT = dsimple_init,
  LEXIZE = dsimple_lexize
);
COMMENT ON TEXT SEARCH TEMPLATE pg_catalog.simple IS 'simple dictionary: just lower case and check for stopword';


(1 row)
